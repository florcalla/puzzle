{"version":3,"sources":["componentes/Modo.js","servicios/shuffleArray.js","servicios/getCats.js","img/loadingp.png","componentes/Loading.js","componentes/Card.js","componentes/Nav.js","styles/tablero.js","componentes/Tablero.js","componentes/Juego.js","App.js","index.js"],"names":["Modo","className","to","pathname","style","textDecoration","color","shufleArray","array","i","length","j","Math","floor","random","temp","getCats","cantidad","a","datos","axios","gato","push","data","Loading","src","loadingIcon","alt","Cub","carta","permitirVuelta","index","desabilitarPar","voltearPar","url","useState","flip","setFlip","desabilitar","setDesabilitar","useEffect","includes","setTimeout","onClick","id","Nav","movimientos","iniciar","parar","reiniciar","timer","setTimer","countRef","useRef","iniciarTiempo","pausar","current","setInterval","clearInterval","Game","styled","div","props","modoJuego","Tablero","modo","normal","error","setError","isloaded","setIsloaded","gatos","setData","primerMovimiento","setPrimerMovimiento","setMovimientos","totalCartas","setTotalCartas","final","setFinal","primeraCarta","setPrimeraCarta","segundaCarta","setSegundaCarta","setDesabilitarPar","setVoltearPar","getDatos","cartasMatch","verificarPrimermovimiento","verificarUltimoMovimiento","newGame","then","result","desabilitarCartas","voltearCartas","resetCards","message","map","Card","withRouter","rows","isnormal","App","basename","process","path","exact","component","render","Juego","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81ca027f.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport '../styles/style.css'\r\nconst Modo = () => {\r\n    return(\r\n        <div className=\"background\">\r\n             <div className = \"modo\">\r\n                 <button className = \"botoninicio\">\r\n                     <Link to = {{pathname :\"/normal\" }} style={{ textDecoration: 'none' ,color: 'inherit' }}  >Normal</Link>\r\n                 </button>\r\n                 <button className = \"botoninicio\"  >\r\n                    <Link to = {{pathname :\"/dificil\" }} style={{ textDecoration: 'none' ,color: 'inherit' }} >Dificil</Link>\r\n                 </button>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modo;"," \r\n export function shufleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n      }\r\n\r\n      return array;\r\n }","import axios from 'axios';\r\nimport {shufleArray} from '../servicios/shuffleArray';\r\n\r\nexport async function getCats (cantidad) {\r\n    let datos = []; \r\n    for(let i = 1; i<=cantidad; i++){\r\n        let gato = await axios(\r\n            'https://cataas.com/cat?json=true&type=sq',\r\n             )\r\n         //setData([...data, gato.data]);\r\n         datos.push(gato.data , gato.data)\r\n        }\r\n    shufleArray(datos);\r\n    return datos;    \r\n}  \r\n\r\nexport default getCats;","export default __webpack_public_path__ + \"static/media/loadingp.6eb138fb.png\";","import '../styles/style.css'\r\nimport loadingIcon  from '../img/loadingp.png'\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"loading\">\r\n            <img className=\"rotar\" src ={loadingIcon} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Cub({ carta , permitirVuelta , index , desabilitarPar , voltearPar}) {\r\n    \r\n    const url = carta.url;\r\n    const [flip, setFlip] = useState(false);\r\n    const [desabilitar , setDesabilitar] = useState(true);\r\n    \r\n\r\n    useEffect(() => {\r\n      if(voltearPar.includes(index)){\r\n        setTimeout( () => setFlip(false), 750);\r\n      }\r\n    },[voltearPar]);\r\n\r\n    useEffect(() => {\r\n      if(desabilitarPar.includes(index)){\r\n        setDesabilitar(false);\r\n      }\r\n    },[desabilitarPar]);\r\n    \r\n\r\n    const flipCard = () => {   \r\n      const valor = permitirVuelta(index, carta.id)\r\n      if(valor === 1) {\r\n        setFlip(!flip)\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        className= {`card ${flip ? 'flip' : ''}`} \r\n        onClick={ desabilitar ? flipCard : null}>\r\n         <div className = \"front\">\r\n         </div>\r\n         <div className =\"back\">\r\n          <img src = {`https://cataas.com${url}`} alt =\"idol\" />\r\n         </div> \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\nexport default Cub;","import { useState , useRef, useEffect} from \"react\";\r\nimport '../styles/style.css'\r\nconst Nav = ({movimientos , iniciar , parar , reiniciar}) => {\r\n    const [timer, setTimer] = useState(0);\r\n    const countRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if(iniciar) {\r\n            iniciarTiempo();\r\n        }\r\n    },[iniciar]);\r\n\r\n    useEffect(() => {\r\n        if(parar) {\r\n            pausar();\r\n        }\r\n    },[parar]);\r\n\r\n    const iniciarTiempo = () => {\r\n       countRef.current = setInterval(() => {\r\n           setTimer((timer) => timer +1 )\r\n       }, 1000)     \r\n    }\r\n    const pausar = () => {\r\n        clearInterval(countRef.current)\r\n    }\r\n\r\n    const nuevoJuego = () => {\r\n        reiniciar();\r\n    }\r\n    return(\r\n        <div className=\"nav\"> \r\n            <section> \r\n               Movimientos :  {movimientos}\r\n            </section>\r\n            <section>\r\n                Tiempo : {timer} s\r\n            </section>\r\n            <button className=\"newgame\" onClick ={nuevoJuego}> \r\n                Otro Juego\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import styled from 'styled-components'\r\n\r\n\r\nexport const Game = styled.div`\r\n    display: grid;\r\n    height: ${props => props.modoJuego ? '700px' : '800px'};\r\n    grid-template-rows: ${props => props.modoJuego ? 'repeat(4, 110px)': 'repeat(6,110px)'};\r\n    grid-template-columns: ${props => props.modoJuego ? 'repeat(4, 110px)': 'repeat(6,110px)'};\r\n    justify-content : center;\r\n    align-content: ${props => props.modoJuego ? 'center' : 'flex-end' };\r\n   \r\n`;\r\n// grid-template-rows: 110px 110px 110px 110px;\r\n// repeat(3, 400px); \r\n","import { useEffect, useState } from 'react';\r\nimport {getCats} from '../servicios/getCats';\r\n\r\n//componentes\r\nimport Loading  from './Loading';\r\nimport Card from './Card';\r\nimport  Nav  from './Nav';\r\n\r\n//style \r\nimport { Game } from '../styles/tablero';\r\n\r\nconst Tablero = ({modo , normal}) =>{\r\n    const [error, setError] = useState(null);\r\n    const [isloaded, setIsloaded] = useState(false);\r\n    const [data, setData] = useState({gatos : []});\r\n    const [primerMovimiento , setPrimerMovimiento] = useState(false);\r\n    const [movimientos , setMovimientos] = useState(0);\r\n    const [totalCartas , setTotalCartas] = useState([]);\r\n    const [final , setFinal] = useState(false);\r\n\r\n    const [primeraCarta, setPrimeraCarta] = useState({});\r\n    const [segundaCarta, setSegundaCarta] = useState({});\r\n\r\n    const [desabilitarPar , setDesabilitarPar] = useState([]);\r\n    const [voltearPar , setVoltearPar] = useState([]);   \r\n\r\n\r\n\r\n    useEffect( () => {              \r\n        getDatos();\r\n      },[]);\r\n\r\n      useEffect( () => {\r\n        cartasMatch();\r\n      },[segundaCarta])\r\n\r\n      useEffect( () => {\r\n        verificarPrimermovimiento();\r\n      },[primeraCarta]);\r\n\r\n      useEffect( () => {\r\n        verificarUltimoMovimiento();\r\n      }, [totalCartas]);\r\n    \r\n    const  getDatos = async () => {\r\n        newGame();\r\n        await getCats(modo)\r\n        .then(\r\n            (result) => {\r\n                setIsloaded(true);\r\n                setData({...data, gatos: result});\r\n            },\r\n            (error) => {\r\n                setIsloaded(true);\r\n                setError(error)\r\n            }\r\n        )  \r\n    } \r\n    const verificarPrimermovimiento = () => {\r\n        if(primeraCarta.id && !primerMovimiento) {\r\n            setPrimerMovimiento(true);\r\n        }  \r\n    }\r\n    const verificarUltimoMovimiento = () => {\r\n        if(totalCartas.length === modo) {\r\n            setFinal(true);\r\n            //console.log('detener cronometro');\r\n        }\r\n\r\n    }\r\n    const permitirVuelta = (index,id ) => {\r\n        if(primeraCarta.index === index && primeraCarta.id === id){\r\n            return 0;\r\n        }\r\n        if (!primeraCarta.id) {\r\n            setPrimeraCarta({index , id});\r\n       \r\n        }\r\n        else if (!segundaCarta.id) {\r\n            setSegundaCarta({index , id});\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    const cartasMatch =() => {\r\n        if(primeraCarta.id && segundaCarta.id) {\r\n            setMovimientos(movimientos+1);\r\n            const igualdad = primeraCarta.id === segundaCarta.id\r\n            if(igualdad) {\r\n                desabilitarCartas();\r\n            }\r\n            else {\r\n                voltearCartas();\r\n            }\r\n        }\r\n    }\r\n\r\n    const desabilitarCartas = () => {\r\n        setDesabilitarPar([primeraCarta.index, segundaCarta.index]);\r\n        setTotalCartas([...totalCartas, primeraCarta.index]);\r\n        resetCards();\r\n    }\r\n    const voltearCartas = () => {   \r\n        setVoltearPar([primeraCarta.index, segundaCarta.index]);\r\n        resetCards();\r\n    }\r\n    const resetCards = () => {\r\n        setSegundaCarta({});\r\n        setPrimeraCarta({});\r\n    }\r\n    const newGame = () => {\r\n        setError(null);\r\n        setIsloaded(false);\r\n        setData({gatos : []});\r\n        setPrimerMovimiento(false);\r\n        setMovimientos(0);\r\n        setTotalCartas([]);\r\n        setFinal(false);\r\n    \r\n        setPrimeraCarta({});\r\n        setSegundaCarta({});\r\n    \r\n        setDesabilitarPar([]);\r\n        setVoltearPar([]);   \r\n    }\r\nif(error) {\r\n    return <div> Error : {error.message}</div>\r\n} else if (!isloaded) {\r\n    return <Loading />\r\n} else {\r\n    return(\r\n        <div> \r\n            <Game modoJuego = {normal}>\r\n                {data.gatos.map( (gato , index) => (\r\n                    <div  key = {index} >\r\n                        <Card\r\n                            carta = {gato}  \r\n                            permitirVuelta={permitirVuelta}\r\n                            index = {index}\r\n                            desabilitarPar = {desabilitarPar}\r\n                            voltearPar = {voltearPar}\r\n                            >        \r\n                        </Card>\r\n                    </div>\r\n                ))}\r\n                <Nav\r\n                movimientos = {movimientos}\r\n                iniciar = {primerMovimiento}\r\n                parar = {final}\r\n                reiniciar = {getDatos}\r\n                >\r\n\r\n                </Nav>\r\n            </Game>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}\r\n\r\nexport default Tablero;","\r\n//componente\r\nimport {withRouter} from 'react-router'\r\n\r\nimport Tablero from './Tablero';\r\nimport '../styles/style.css'\r\n\r\nconst Game = (props) => {\r\n  const modo = props.rows;\r\n  const normal = props.isnormal;\r\n    return(\r\n      <div className =\"tablero\" >\r\n        <Tablero modo = {modo} normal = {normal} /> \r\n      </div>\r\n        \r\n    );\r\n  \r\n}\r\n\r\nexport default withRouter(Game);","import './App.css';\r\nimport React, {} from 'react';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\n//COMPONENTES\r\nimport Modo from './componentes/Modo';\r\nimport Juego from './componentes/Juego';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL} > \r\n    <div className=\"inicio\"> \r\n      <Route  path =\"/\"   exact component = {Modo}/>\r\n      <Route  \r\n        path=\"/normal\"  \r\n        render = {(props) =>  (\r\n          <Juego {...props } rows = {8} isnormal = {true}/>\r\n        )}/>\r\n      <Route  \r\n        path=\"/dificil\"  \r\n        render = {(props) =>  (\r\n          <Juego {...props } rows = {18} isnormal = {false}/>\r\n        )}/>\r\n    </div>\r\n  </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}